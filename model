{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8ecdc4b2-a5db-4073-8816-20c71fbca135",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split,GridSearchCV,RandomizedSearchCV\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d51a978f-b036-4ce8-a8f2-97c702aed1ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv(\"concrete_data.csv\")\n",
    "df1=df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "44054d7a-feeb-47b9-a775-3d474e5e67d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cement</th>\n",
       "      <th>Blast Furnace Slag</th>\n",
       "      <th>Fly Ash</th>\n",
       "      <th>Water</th>\n",
       "      <th>Superplasticizer</th>\n",
       "      <th>Coarse Aggregate</th>\n",
       "      <th>Fine Aggregate</th>\n",
       "      <th>Age</th>\n",
       "      <th>Strength</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>540.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>162.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>676.0</td>\n",
       "      <td>28</td>\n",
       "      <td>79.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Cement  Blast Furnace Slag  Fly Ash  Water  Superplasticizer   \n",
       "0   540.0                 0.0      0.0  162.0               2.5  \\\n",
       "\n",
       "   Coarse Aggregate  Fine Aggregate  Age  Strength  \n",
       "0            1040.0           676.0   28     79.99  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8c78761a-0c33-4a77-9aa7-6caf28bd8c8d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1030 entries, 0 to 1029\n",
      "Data columns (total 9 columns):\n",
      " #   Column              Non-Null Count  Dtype  \n",
      "---  ------              --------------  -----  \n",
      " 0   Cement              1030 non-null   float64\n",
      " 1   Blast Furnace Slag  1030 non-null   float64\n",
      " 2   Fly Ash             1030 non-null   float64\n",
      " 3   Water               1030 non-null   float64\n",
      " 4   Superplasticizer    1030 non-null   float64\n",
      " 5   Coarse Aggregate    1030 non-null   float64\n",
      " 6   Fine Aggregate      1030 non-null   float64\n",
      " 7   Age                 1030 non-null   int64  \n",
      " 8   Strength            1030 non-null   float64\n",
      "dtypes: float64(8), int64(1)\n",
      "memory usage: 72.5 KB\n"
     ]
    }
   ],
   "source": [
    "df1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a5be34c6-799c-49f6-9adc-0c7ad9202998",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Cement'>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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c3O0tLTEl7/85di+ffvBnvoRbeHChfGxj30sRo0aFePGjYtLL700XnnllQHb9PT0xPz58+P444+PkSNHxuWXXx5vvfXWgG02bNgQc+fOjREjRsS4cePi5ptvjt27dx/Kb+WIc++998bZZ59d/U9c2traor29vTpuXYaORYsWRaVSiRtuuKF6nfWpjdtvvz0qlcqA02mnnVYdty7v30EPhB07dsT06dPjnnvuec/xO+64I+6+++74yU9+Ep2dnXHsscfG7Nmzo6enp7rNvHnz4qWXXoqlS5fGkiVL4sknn4yvfe1rB3vqR7SOjo6YP39+PPPMM7F06dLYtWtXXHTRRbFjx47qNt/+9rfjD3/4Qzz00EPR0dERGzdujM9//vPV8b6+vpg7d26888478fTTT8cvf/nLuP/+++O2226rxbd0xDjxxBNj0aJFsWrVqnj22WfjwgsvjEsuuSReeumliLAuQ8XKlSvjvvvui7PPPnvA9dands4444zYtGlT9fTUU09Vx6zLIJRDKCLK4sWLq5f7+/vLhAkTyp133lm9btu2baWhoaE88MADpZRS/vrXv5aIKCtXrqxu097eXiqVSvnHP/5xyOZ+pNuyZUuJiNLR0VFK+c86DBs2rDz00EPVbV5++eUSEWXFihWllFIeeeSRUldXVzZv3lzd5t577y3Nzc2lt7f30H4DR7jjjjuu/PSnP7UuQ0R3d3c59dRTy9KlS8unPvWpcv3115dSPG5qacGCBWX69OnvOWZdBqemxyCsW7cuNm/eHLNmzapeN3r06JgxY0asWLEiIiJWrFgRLS0tcf7551e3mTVrVtTV1UVnZ+chn/OR6u23346IiDFjxkRExKpVq2LXrl0D1ua0006Lk046acDanHXWWTF+/PjqNrNnz46urq7qv3b5YPr6+uLBBx+MHTt2RFtbm3UZIubPnx9z584dsA4RHje19uqrr8akSZPilFNOiXnz5sWGDRsiwroM1qA/rOlA2Lx5c0TEgAXZc3nP2ObNm2PcuHEDxuvr62PMmDHVbfhg+vv744YbbogLLrggzjzzzIj4z/0+fPjwaGlpGbDtu9fmvdZuzxiDt3bt2mhra4uenp4YOXJkLF68OE4//fRYs2aNdamxBx98MJ577rlYuXJlGvO4qZ0ZM2bE/fffH9OmTYtNmzbFD37wg/jEJz4RL774onUZpJoGAkPD/Pnz48UXXxzwfh21NW3atFizZk28/fbb8Zvf/Cauvvrq6OjoqPW0jnpvvvlmXH/99bF06dJobGys9XTYy5w5c6rnzz777JgxY0acfPLJ8etf/zqamppqOLPDV03fYpgwYUJERDqS9K233qqOTZgwIbZs2TJgfPfu3bF169bqNgzeddddF0uWLIknnnhiwMd3T5gwId55553Ytm3bgO3fvTbvtXZ7xhi84cOHx0c+8pE477zzYuHChTF9+vS46667rEuNrVq1KrZs2RLnnntu1NfXR319fXR0dMTdd98d9fX1MX78eOszRLS0tMTUqVPjtdde87gZpJoGwpQpU2LChAnx+OOPV6/r6uqKzs7OaGtri4iItra22LZtW6xataq6zbJly6K/vz9mzJhxyOd8pCilxHXXXReLFy+OZcuWxZQpUwaMn3feeTFs2LABa/PKK6/Ehg0bBqzN2rVrBwTc0qVLo7m5OU4//fRD840cJfr7+6O3t9e61NjMmTNj7dq1sWbNmurp/PPPj3nz5lXPW5+hYfv27fH666/HxIkTPW4G62AfBdnd3V1Wr15dVq9eXSKi/PjHPy6rV68ub7zxRimllEWLFpWWlpby+9//vrzwwgvlkksuKVOmTCk7d+6s7uNzn/tc+ehHP1o6OzvLU089VU499dRy1VVXHeypH9G+8Y1vlNGjR5fly5eXTZs2VU///ve/q9t8/etfLyeddFJZtmxZefbZZ0tbW1tpa2urju/evbuceeaZ5aKLLipr1qwpjz76aBk7dmy59dZba/EtHTFuueWW0tHRUdatW1deeOGFcsstt5RKpVIee+yxUop1GWr2/iuGUqxPrdx0001l+fLlZd26deXPf/5zmTVrVjnhhBPKli1bSinWZTAOeiA88cQTJSLS6eqrry6l/OdPHb///e+X8ePHl4aGhjJz5szyyiuvDNjHv/71r3LVVVeVkSNHlubm5nLNNdeU7u7ugz31I9p7rUlElF/84hfVbXbu3Fmuvfbactxxx5URI0aUyy67rGzatGnAftavX1/mzJlTmpqaygknnFBuuummsmvXrkP83RxZvvSlL5WTTz65DB8+vIwdO7bMnDmzGgelWJeh5t2BYH1q44orrigTJ04sw4cPLx/60IfKFVdcUV577bXquHV5/3zcMwCQ+CwGACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCHAY2rx5c3zzm9+MU045JRoaGqK1tTUuvvjiAR9GM1R9+tOfjhtuuKHW0wD+i/paTwB4f9avXx8XXHBBtLS0xJ133hlnnXVW7Nq1K/74xz/G/Pnz429/+1utpwgcAbyCAIeZa6+9NiqVSvzlL3+Jyy+/PKZOnRpnnHFG3HjjjfHMM89ERMS2bdviK1/5SowdOzaam5vjwgsvjOeff766j9tvvz3OOeec+PnPfx4nnXRSjBw5Mq699tro6+uLO+64IyZMmBDjxo2LH/7whwNue3/3+6tf/SomT54co0ePjiuvvDK6u7sjIuKLX/xidHR0xF133RWVSiUqlUqsX7/+4N9pwPsmEOAwsnXr1nj00Udj/vz5ceyxx6bxlpaWiIj4whe+EFu2bIn29vZYtWpVnHvuuTFz5szYunVrddvXX3892tvb49FHH40HHnggfvazn8XcuXPj73//e3R0dMSPfvSj+N73vhednZ3Vr9nf/T788MOxZMmSWLJkSXR0dMSiRYsiIuKuu+6Ktra2+OpXvxqbNm2KTZs2RWtr60G6t4APpNYfJwnsv87OzhIR5Xe/+90+t/nTn/5UmpubS09Pz4DrP/zhD5f77ruvlFLKggULyogRI0pXV1d1fPbs2WXy5Mmlr6+vet20adPKwoULP9B+b7755jJjxozq5Xd/PDIwNDkGAQ4jZT8+nf3555+P7du3x/HHHz/g+p07d8brr79evTx58uQYNWpU9fL48ePjmGOOibq6ugHXbdmy5QPtd+LEidV9AIcPgQCHkVNPPTUqlcr/eyDi9u3bY+LEibF8+fI0tuctiIiIYcOGDRirVCrveV1/f/8H3u+efQCHD4EAh5ExY8bE7Nmz45577olvfetb6TiEbdu2xbnnnhubN2+O+vr6mDx58gG77QO13+HDh0dfX98BmxdwcDhIEQ4z99xzT/T19cXHP/7x+O1vfxuvvvpqvPzyy3H33XdHW1tbzJo1K9ra2uLSSy+Nxx57LNavXx9PP/10fPe7341nn3120Ld7oPY7efLk6OzsjPXr18c///lPry7AECUQ4DBzyimnxHPPPRef+cxn4qabboozzzwzPvvZz8bjjz8e9957b1QqlXjkkUfik5/8ZFxzzTUxderUuPLKK+ONN96I8ePHD/p2D9R+v/Od78QxxxwTp59+eowdOzY2bNgw6DkBB0+l7M9RTwDAUcUrCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAADJ/wAWL7S4bHbArgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Cement\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "024cd798-3565-4b1a-8e3e-61d942f71f63",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cement</th>\n",
       "      <th>Blast Furnace Slag</th>\n",
       "      <th>Fly Ash</th>\n",
       "      <th>Water</th>\n",
       "      <th>Superplasticizer</th>\n",
       "      <th>Coarse Aggregate</th>\n",
       "      <th>Fine Aggregate</th>\n",
       "      <th>Age</th>\n",
       "      <th>Strength</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Cement</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.275216</td>\n",
       "      <td>-0.397467</td>\n",
       "      <td>-0.081587</td>\n",
       "      <td>0.092386</td>\n",
       "      <td>-0.109349</td>\n",
       "      <td>-0.222718</td>\n",
       "      <td>0.081946</td>\n",
       "      <td>0.497832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Blast Furnace Slag</th>\n",
       "      <td>-0.275216</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.323580</td>\n",
       "      <td>0.107252</td>\n",
       "      <td>0.043270</td>\n",
       "      <td>-0.283999</td>\n",
       "      <td>-0.281603</td>\n",
       "      <td>-0.044246</td>\n",
       "      <td>0.134829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fly Ash</th>\n",
       "      <td>-0.397467</td>\n",
       "      <td>-0.323580</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.256984</td>\n",
       "      <td>0.377503</td>\n",
       "      <td>-0.009961</td>\n",
       "      <td>0.079108</td>\n",
       "      <td>-0.154371</td>\n",
       "      <td>-0.105755</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Water</th>\n",
       "      <td>-0.081587</td>\n",
       "      <td>0.107252</td>\n",
       "      <td>-0.256984</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.657533</td>\n",
       "      <td>-0.182294</td>\n",
       "      <td>-0.450661</td>\n",
       "      <td>0.277618</td>\n",
       "      <td>-0.289633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Superplasticizer</th>\n",
       "      <td>0.092386</td>\n",
       "      <td>0.043270</td>\n",
       "      <td>0.377503</td>\n",
       "      <td>-0.657533</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.265999</td>\n",
       "      <td>0.222691</td>\n",
       "      <td>-0.192700</td>\n",
       "      <td>0.366079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coarse Aggregate</th>\n",
       "      <td>-0.109349</td>\n",
       "      <td>-0.283999</td>\n",
       "      <td>-0.009961</td>\n",
       "      <td>-0.182294</td>\n",
       "      <td>-0.265999</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.178481</td>\n",
       "      <td>-0.003016</td>\n",
       "      <td>-0.164935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fine Aggregate</th>\n",
       "      <td>-0.222718</td>\n",
       "      <td>-0.281603</td>\n",
       "      <td>0.079108</td>\n",
       "      <td>-0.450661</td>\n",
       "      <td>0.222691</td>\n",
       "      <td>-0.178481</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.156095</td>\n",
       "      <td>-0.167241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>0.081946</td>\n",
       "      <td>-0.044246</td>\n",
       "      <td>-0.154371</td>\n",
       "      <td>0.277618</td>\n",
       "      <td>-0.192700</td>\n",
       "      <td>-0.003016</td>\n",
       "      <td>-0.156095</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.328873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Strength</th>\n",
       "      <td>0.497832</td>\n",
       "      <td>0.134829</td>\n",
       "      <td>-0.105755</td>\n",
       "      <td>-0.289633</td>\n",
       "      <td>0.366079</td>\n",
       "      <td>-0.164935</td>\n",
       "      <td>-0.167241</td>\n",
       "      <td>0.328873</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Cement  Blast Furnace Slag   Fly Ash     Water   \n",
       "Cement              1.000000           -0.275216 -0.397467 -0.081587  \\\n",
       "Blast Furnace Slag -0.275216            1.000000 -0.323580  0.107252   \n",
       "Fly Ash            -0.397467           -0.323580  1.000000 -0.256984   \n",
       "Water              -0.081587            0.107252 -0.256984  1.000000   \n",
       "Superplasticizer    0.092386            0.043270  0.377503 -0.657533   \n",
       "Coarse Aggregate   -0.109349           -0.283999 -0.009961 -0.182294   \n",
       "Fine Aggregate     -0.222718           -0.281603  0.079108 -0.450661   \n",
       "Age                 0.081946           -0.044246 -0.154371  0.277618   \n",
       "Strength            0.497832            0.134829 -0.105755 -0.289633   \n",
       "\n",
       "                    Superplasticizer  Coarse Aggregate  Fine Aggregate   \n",
       "Cement                      0.092386         -0.109349       -0.222718  \\\n",
       "Blast Furnace Slag          0.043270         -0.283999       -0.281603   \n",
       "Fly Ash                     0.377503         -0.009961        0.079108   \n",
       "Water                      -0.657533         -0.182294       -0.450661   \n",
       "Superplasticizer            1.000000         -0.265999        0.222691   \n",
       "Coarse Aggregate           -0.265999          1.000000       -0.178481   \n",
       "Fine Aggregate              0.222691         -0.178481        1.000000   \n",
       "Age                        -0.192700         -0.003016       -0.156095   \n",
       "Strength                    0.366079         -0.164935       -0.167241   \n",
       "\n",
       "                         Age  Strength  \n",
       "Cement              0.081946  0.497832  \n",
       "Blast Furnace Slag -0.044246  0.134829  \n",
       "Fly Ash            -0.154371 -0.105755  \n",
       "Water               0.277618 -0.289633  \n",
       "Superplasticizer   -0.192700  0.366079  \n",
       "Coarse Aggregate   -0.003016 -0.164935  \n",
       "Fine Aggregate     -0.156095 -0.167241  \n",
       "Age                 1.000000  0.328873  \n",
       "Strength            0.328873  1.000000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c0749972-cd98-4495-9da1-edb2cb082641",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x17b4d891450>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x=df1[\"Blast Furnace Slag\"],y=df1[\"Strength\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "fff4579e-6eb2-43c2-b445-12e4c561b2b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x17b4d9bf130>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x=df1[\"Fly Ash\"],y=df1[\"Strength\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "89baa703-c563-43c5-8b83-06fe8cfe24d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Blast Furnace Slag'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Blast Furnace Slag\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5ca0754d-c834-4bcd-bada-45e16c9535cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "290.2"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "upper_limit=df1[\"Blast Furnace Slag\"].quantile(0.99)\n",
    "upper_limit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "64b9551d-2fd1-4400-88b3-dba9b6a8d6dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1[\"Blast Furnace Slag\"]=np.where(df1[\"Blast Furnace Slag\"]>upper_limit,upper_limit,df1[\"Blast Furnace Slag\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0b36d8c7-e9db-4d31-9fe9-50106fbbb426",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Blast Furnace Slag'>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Blast Furnace Slag\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7662fbeb-72fe-4dba-97cd-aae5fc5326e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Fly Ash'>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Fly Ash\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7d05df13-dcc6-4883-a1da-81f43b2f8274",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Water'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAggAAAGwCAYAAADMjZ3mAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAa0UlEQVR4nO3dfXDcdZ3A8c+GtEmApJGH0kvbcCiIFgEf2ukUGUsYrw8y8qAzKlRBpzNOuValICPeDejRGYsjCFyHozrDgA/1mOO0nQqWO7ymBa6lUiggHCKiELVFRqA0haZNur/7w+se4dOmtSTZkLxeM51p9rf7y/f3aXfzzm93Z0tFURQBAPA6NdVeAAAw9AgEACARCABAIhAAgEQgAACJQAAAEoEAACS1B3vDcrkcmzdvjsbGxiiVSv25JgBggBRFEZ2dndHS0hI1Nfs+T3DQgbB58+aYOHHiwd4cAKii3//+9zFhwoR9bj/oQGhsbKx8g6ampoPdDQAwiLZt2xYTJ06s/Bzfl4MOhD1PKzQ1NQkEAHiL2d/LA7xIEQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACS11V4AVEtRFNHV1VXtZQxZRVHEzp07IyKirq4uSqXSgH6/+vr6Af8ewIETCIxYXV1dMXv27Govg/+zatWqaGhoqPYygP/jKQYAIHEGASJi+3vPj6LG3aGX3d3R+OjtERHReeqnIg4Z1e/folTuicMf+dd+3y/w5nlEhIi/xMEA/AAcNg4ZNSDzKfp9j0B/8RQDAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAASW21FzAQiqKIrq6uiIior6+PUqlU5RUBsC8es4emYXkGoaurK2bPnh2zZ8+u/KcDYGjymD00DctAAADeHIEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACAZcoFw4YUXxhlnnBEXXnhhtZcCwAiwbt26OPfcc+Pcc8+NdevWVXs5ERFxyy23xJlnnhm33HJL1dYwpALh6aefjo6OjoiI6OjoiKeffrrKKwJgOOvq6orrrrsutm7dGlu3bo3rrrsuurq6qrqmrVu3xrJly6JcLseyZcti69atVVnHkAqEiy++uM+vAaA/LVu2LF588cXK1y+++GL86Ec/quKKIq688sool8sREVEul+Oqq66qyjpqq/Jd92Lp0qXR09PT67Kenp5YunRpzJs376/aV1EUlb9XuwQZunr933jd/xkGkfsq0fvfvhjE++If/vCHvcbAsmXLYsaMGTFhwoRBW8seGzdujF/+8pe9Lnvsscdi48aNMXny5EFdywEHws6dO2Pnzp2Vr7dt29Zvi+ju7o7bb799r9tuv/32mDt3bowaNeqA9/f6dZ533nlven2MAOWeiBhd7VWMPOX//6XAfZWIvzx+H3rooQP+fYqiiBtvvDF2796dtu3evTtuuOGG+Na3vhWlUmnA17JHuVyOq6++eq/brr766lixYkXU1Azeif8D/k6LFy+OMWPGVP5MnDix3xaxZMmSN7UdAP4aHR0d8eCDD+5z+8aNGyuviRssGzZs2Ocv39u2bYsNGzYM6noO+AzC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L3whTjzxxGhoaIjW1tb44he/GK+88kqv/YzU+bxeURQxe/bsvd4Ph9N8+jUQXn311Tj11FPjpptuSttee+21ePjhh+PKK6+Mhx9+OH7yk5/EU089FWeffXav682ZMyeeeOKJuOeee+LOO++Me++9Nz7/+c/35zKrpq/5vN7y5cvjgQceiJaWlrRtJM/nmWeeidNPPz3e9a53xZo1a+Kxxx6LK6+8Murr6yvXWbhwYfz0pz+NO+64I9auXRubN2+Oj33sY4N1CANqf/O59NJL4+67744f/vCH8eSTT8Yll1wSCxYsiJUrV1auM5zns3bt2pg/f3488MADcc8990R3d3fMmDEjXn311cp19nf8u3fvjrPOOit27doV69ati+9973tx2223xVVXXVWNQ+pX+5vP5s2bY/PmzXHttdfG448/HrfddlvcfffdMXfu3Mo+RvJ8Xu+GG27Y60cMDLv5FAMkIorly5f3eZ1f/OIXRUQUzz33XFEURfE///M/RUQUDz74YOU6q1atKkqlUvHHP/5xoJZaFfuazx/+8Idi/PjxxeOPP14ce+yxxfXXX1/ZNtLn88lPfrL49Kc/vc/bbN26tRg1alRxxx13VC578skni4go1q9fP1BLrYq9zeekk04qrr766l6Xvf/97y/+8R//sSiKkTWfoiiKF154oYiIYu3atUVRHNjx/+xnPytqamqK559/vnKdm2++uWhqaip27tw5uAcwwN44n735t3/7t2L06NFFd3d3URTmUxRFsWnTpmL8+PHFli1b0v1wuM2nqq9BeOWVV6JUKkVzc3NERKxfvz6am5tj8uTJlet8+MMfjpqamtiwYUOVVjl4yuVyfOYzn4nLL788TjrppLR9JM+nXC7HXXfdFe985ztj5syZMXbs2Jg6dWqv03sPPfRQdHd3x4c//OHKZe9617uitbU11q9fX4VVD67TTjstVq5cGX/84x+jKIpob2+PX//61zFjxoyIGHnz2XNq/IgjjoiIAzv+9evXx8knnxzHHHNM5TozZ86Mbdu2xRNPPDGIqx94b5zPvq7T1NQUtbV/+diekT6f1157LS644IK46aabYty4cek2w20+VQuErq6u+MpXvhLnn39+5cMunn/++Rg7dmyv69XW1sYRRxwRzz//fDWWOai++c1vRm1tbXzxi1/c6/aRPJ8XXnghtm/fHtdcc03MmjUr/vM//zPOO++8+NjHPhZr166NiL/MZ/To0ZXg3OOYY44Z9vOJiFiyZElMmjQpJkyYEKNHj45Zs2bFTTfdFB/60IciYmTNp1wuxyWXXBIf/OAH4z3veU9EHNjxP//8870e3Pds37NtuNjbfN7oz3/+cyxatKjXU5gjfT4LFy6M0047Lc4555y93m64zeegP83xzeju7o5PfOITURRF3HzzzdVYwpDz0EMPxY033hgPP/zwQX189nBXLpcjIuKcc86JhQsXRkTEe9/73li3bl0sXbo0pk+fXs3lDQlLliyJBx54IFauXBnHHnts3HvvvTF//vxoaWnp9VvzSDB//vx4/PHH4/7776/2Uoak/c1n27ZtcdZZZ8WkSZPi61//+uAubgjY23xWrlwZq1evjk2bNlVxZYNr0M8g7ImD5557Lu65555eH5U5bty4eOGFF3pdv6enJ1566aW9ns4ZTu6777544YUXorW1NWpra6O2tjaee+65uOyyy+Jv//ZvI2Jkz+eoo46K2tramDRpUq/L3/3ud1fexTBu3LjYtWtXbN26tdd1/vSnPw37+ezYsSP+4R/+Ib797W/HRz/60TjllFNiwYIF8clPfjKuvfbaiBg581mwYEHceeed0d7e3usj6Q/k+MeNG5fe1bDn6+Eyo33NZ4/Ozs6YNWtWNDY2xvLly2PUqFGVbSN5PqtXr45nnnkmmpubK4/REREf//jH44wzzoiI4TefQQ2EPXHw9NNPx89//vM48sgje22fNm1abN26NR566KHKZatXr45yuRxTp04dzKUOus985jPx2GOPxSOPPFL509LSEpdffnn8x3/8R0SM7PmMHj06pkyZkt529Otf/zqOPfbYiIj4wAc+EKNGjYr/+q//qmx/6qmnoqOjI6ZNmzao6x1s3d3d0d3dHTU1ve/ShxxySOXsy3CfT1EUsWDBgli+fHmsXr06jjvuuF7bD+T4p02bFr/85S97hfieX2TeGKdvNfubT8RfzhzMmDEjRo8eHStXruz1DqGIkT2fK664Ij1GR0Rcf/31ceutt0bEMJxPf77isbOzs9i0aVOxadOmIiKKb3/728WmTZuK5557rti1a1dx9tlnFxMmTCgeeeSRYsuWLZU/r39156xZs4r3ve99xYYNG4r777+/OOGEE4rzzz+/P5dZNX3NZ2/e+C6GohjZ8/nJT35SjBo1qvjud79bPP3008WSJUuKQw45pLjvvvsq+5g3b17R2tparF69uti4cWMxbdq0Ytq0adU6pH61v/lMnz69OOmkk4r29vbit7/9bXHrrbcW9fX1xb/8y79U9jGc53PxxRcXY8aMKdasWdPr8eW1116rXGd/x9/T01O85z3vKWbMmFE88sgjxd13310cffTRxVe/+tVqHFK/2t98XnnllWLq1KnFySefXPzmN7/pdZ2enp6iKEb2fPYm3vAuhuE2n34NhPb29iIi0p+LLrqo+N3vfrfXbRFRtLe3V/bx4osvFueff35x+OGHF01NTcXnPve5orOzsz+XWTV9zWdv9hYII30+t9xyS3H88ccX9fX1xamnnlqsWLGi1z527NhR/P3f/33xtre9rTj00EOL8847r9iyZcsgH8nA2N98tmzZUnz2s58tWlpaivr6+uLEE08srrvuuqJcLlf2MZzns6/Hl1tvvbVynQM5/meffbaYPXt20dDQUBx11FHFZZddVnmb31vZ/uazr/9fEVH87ne/q+xnpM5nX7d549uNh9N8fNwzAJD4LAYAIBEIAEAiEACARCAAAIlAAAASgQAAJAIBAEgEAgCQCAQAIBEIMEwsXbo0Ghsbo6enp3LZ9u3bY9SoUZVPm9tjzZo1USqV4plnnulzn3uu98ZPQASGP4EAw0RbW1ts3749Nm7cWLnsvvvui3HjxsWGDRuiq6urcnl7e3u0trbGO97xjkFZW1EUvcIFGPoEAgwTJ554YvzN3/xNrFmzpnLZmjVr4pxzzonjjjsuHnjggV6Xt7W1xQ9+8IOYPHlyNDY2xrhx4+KCCy6ofFTts88+G21tbRER8ba3vS1KpVJ89rOfjYiIcrkcixcvjuOOOy4aGhri1FNPjX//93/vtf9SqRSrVq2KD3zgA1FXVxf333//wA8B6DcCAYaRtra2aG9vr3zd3t4eZ5xxRkyfPr1y+Y4dO2LDhg3R1tYW3d3dsWjRonj00UdjxYoV8eyzz1YiYOLEifHjH/84IiKeeuqp2LJlS9x4440REbF48eL4/ve/H0uXLo0nnngiFi5cGJ/+9Kdj7dq1vdZzxRVXxDXXXBNPPvlknHLKKYMwAaC/1FZ7AUD/aWtri0suuSR6enpix44dsWnTppg+fXp0d3fH0qVLIyJi/fr1sXPnzmhra4vW1tbKbd/+9rfHP//zP8eUKVNi+/btcfjhh8cRRxwRERFjx46N5ubmiIjYuXNnfOMb34if//znMW3atMpt77///vjOd74T06dPr+zz6quvjr/7u78bpKMH+pNAgGHkjDPOiFdffTUefPDBePnll+Od73xnHH300TF9+vT43Oc+F11dXbFmzZp4+9vfHq2trfHQQw/F17/+9Xj00Ufj5ZdfjnK5HBERHR0dMWnSpL1+j9/85jfx2muvpR/8u3btive97329Lps8efLAHCgw4AQCDCPHH398TJgwIdrb2+Pll1+u/Dbf0tISEydOjHXr1kV7e3uceeaZ8eqrr8bMmTNj5syZsWzZsjj66KOjo6MjZs6cGbt27drn99i+fXtERNx1110xfvz4Xtvq6up6fX3YYYf18xECg0UgwDDT1tYWa9asiZdffjkuv/zyyuUf+tCHYtWqVfGLX/wiLr744vjVr34VL774YlxzzTUxceLEiIhe74CIiBg9enREROzevbty2aRJk6Kuri46Ojp6PZ0ADC8CAYaZtra2mD9/fnR3d/f6AT59+vRYsGBB7Nq1K9ra2qK2tjZGjx4dS5YsiXnz5sXjjz8eixYt6rWvY489NkqlUtx5553xkY98JBoaGqKxsTG+/OUvx8KFC6NcLsfpp58er7zySvz3f/93NDU1xUUXXTTYhwwMAO9igGGmra0tduzYEccff3wcc8wxlcunT58enZ2dlbdDHn300XHbbbfFHXfcEZMmTYprrrkmrr322l77Gj9+fPzTP/1TXHHFFXHMMcfEggULIiJi0aJFceWVV8bixYvj3e9+d8yaNSvuuuuuOO644wb1WIGBUyqKoqj2IgCAocUZBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgAQCIQAIDkfwEzgQ2aUmtZ9AAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Water\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6439305a-5e25-487d-860f-58064a84e783",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x17b4fcff940>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(x=df1[\"Water\"],kind=\"kde\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "02972800-0454-4e74-8e47-d3a3e9591fe0",
   "metadata": {},
   "outputs": [],
   "source": [
    "upper_limit=df1[\"Water\"].quantile(0.99)\n",
    "lower_limit=df1[\"Water\"].quantile(0.01)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "224f7b32-564c-46a5-919b-70aca3d26fc6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1[\"Water\"]=np.where(df1[\"Water\"]>upper_limit,upper_limit,df1[\"Water\"])\n",
    "df1[\"Water\"]=np.where(df1[\"Water\"]<lower_limit,lower_limit,df1[\"Water\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "694618e9-9be9-4672-a89f-dd33362aae72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Water'>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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I0eOjKuuuio6Ojr278IPMHsy53Xr1sUnPvGJGDFiRBx66KExefLkWL9+ffnyzs7OmDlzZrznPe+J4cOHx6c+9al45ZVX+vFeDGy7m3FHR0fMmjUrxo0bF3V1dTFp0qRYuHBhn33M+J3NmzcvJk+eHPX19TF69Oj45Cc/Gc8880yfffZkhuvXr49zzz03hg0bFqNHj445c+ZET09Pf96VAWt3M37ttdfic5/7XBx77LFRV1cX48ePj2uvvTbeeOONPsc5WGcsEPahrVu3ximnnBJ33nnnO+63aNGiWLlyZTQ2NqbLLrnkknj66afjwQcfjPvuuy8efvjh+MxnPrO/lnxA2t2cn3/++TjzzDPjuOOOi6VLl8ZTTz0VN998c9TW1pb3mT17dvzyl7+Me+65J5YtWxYbNmyICy+8sL/uwoC3uxlff/318cADD8SPf/zjWLduXVx33XUxa9asWLx4cXkfM35ny5Yti5kzZ8bKlSvjwQcfjO7u7pg6dWps3bq1vM/uZvjWW2/FueeeG9u3b49HH300fvCDH8Tdd98dX/rSlypxlwac3c14w4YNsWHDhrjtttti7dq1cffdd8cDDzwQV111VfkYB/WMC/aLiCgWLVqUtv/jH/8ojjzyyGLt2rXFhAkTim984xvly/785z8XEVE89thj5W1LliwpSqVS8fLLL/fDqg88O5vzRRddVFx66aW7vM7rr79eDB06tLjnnnvK29atW1dERLFixYr9tdQD1s5mfMIJJxS33nprn20f+tCHii9+8YtFUZjx3ti8eXMREcWyZcuKotizGf7qV78qhgwZUmzatKm8z3e+852ioaGh6Orq6t87cAD4zxnvzE9/+tOiurq66O7uLori4J6xMwj9qLe3Ny677LKYM2dOnHDCCenyFStWxMiRI+P0008vbzvnnHNiyJAhsWrVqv5c6gGrt7c37r///jjmmGNi2rRpMXr06DjjjDP6nCJfvXp1dHd3xznnnFPedtxxx8X48eNjxYoVFVj1gefDH/5wLF68OF5++eUoiiJaW1vj2WefjalTp0aEGe+Nt09rH3744RGxZzNcsWJFnHTSSTFmzJjyPtOmTYu2trZ4+umn+3H1B4b/nPGu9mloaIiqqn/9qaKDecYCoR997Wtfi6qqqrj22mt3evmmTZti9OjRfbZVVVXF4YcfHps2beqPJR7wNm/eHB0dHTF//vyYPn16/OY3v4kLLrggLrzwwli2bFlE/GvO1dXVMXLkyD7XHTNmjDnvoQULFsSkSZNi3LhxUV1dHdOnT48777wzzjrrrIgw43ert7c3rrvuuvjIRz4SJ554YkTs2Qw3bdrU54nr7cvfvox/29mM/9M///nPmDt3bp+XdQ/mGe/1X3Pk3Vm9enXccccd8cc//tGfx96Pent7IyLi/PPPj9mzZ0dExAc/+MF49NFHY+HChdHc3FzJ5Q0aCxYsiJUrV8bixYtjwoQJ8fDDD8fMmTOjsbGxz7942TMzZ86MtWvXxvLlyyu9lEFrdzNua2uLc889NyZNmhS33HJL/y5ugHIGoZ888sgjsXnz5hg/fnxUVVVFVVVVvPjii3HDDTfE+973voiIGDt2bGzevLnP9Xp6euK1116LsWPHVmDVB54jjjgiqqqqYtKkSX22H3/88eVPMYwdOza2b98er7/+ep99XnnlFXPeA9u2bYsvfOELcfvtt8d5550XJ598csyaNSsuuuiiuO222yLCjN+NWbNmxX333Retra0xbty48vY9meHYsWPTpxre/tmc/21XM35be3t7TJ8+Perr62PRokUxdOjQ8mUH84wFQj+57LLL4qmnnoonnnii/NXY2Bhz5syJX//61xERMWXKlHj99ddj9erV5es99NBD0dvbG2eccUalln5Aqa6ujsmTJ6ePiz377LMxYcKEiIg47bTTYujQofG73/2ufPkzzzwT69evjylTpvTreg9E3d3d0d3dHUOG9H34OOSQQ8pncMx494qiiFmzZsWiRYvioYceiokTJ/a5fE9mOGXKlPjTn/7U5x8WDz74YDQ0NKRIPhjtbsYR/zpzMHXq1Kiuro7Fixf3+bRTxEE+4wq/SXJQaW9vL9asWVOsWbOmiIji9ttvL9asWVO8+OKLO93/Pz/FUBRFMX369OLUU08tVq1aVSxfvrz4wAc+UFx88cX9sPoDx+7m/Itf/KIYOnRo8b3vfa/461//WixYsKA45JBDikceeaR8jKuvvroYP3588dBDDxWPP/54MWXKlGLKlCmVuksDzu5m3NzcXJxwwglFa2tr8be//a246667itra2uLb3/52+Rhm/M6uueaaYsSIEcXSpUuLjRs3lr/efPPN8j67m2FPT09x4oknFlOnTi2eeOKJ4oEHHihGjRpV3HTTTZW4SwPO7mb8xhtvFGeccUZx0kknFc8991yffXp6eoqiOLhnLBD2odbW1iIi0tfll1++0/13FgivvvpqcfHFFxfDhw8vGhoaiiuvvLJob2/f/4s/gOzJnL///e8XRx99dFFbW1uccsopxb333tvnGNu2bSs++9nPFocddlgxbNiw4oILLig2btzYz/dk4NrdjDdu3FhcccUVRWNjY1FbW1sce+yxxde//vWit7e3fAwzfmc7m29EFHfddVd5nz2Z4QsvvFDMmDGjqKurK4444ojihhtuKH9E72C3uxnv6vc8Ioq///3v5eMcrDP2554BgMR7EACARCAAAIlAAAASgQAAJAIBAEgEAgCQCAQAIBEIAEAiEACARCDAILFw4cKor6+Pnp6e8raOjo4YOnRonH322X32Xbp0aZRKpXj++eff8Zhv7/eff1EQGPwEAgwSLS0t0dHREY8//nh52yOPPBJjx46NVatWRWdnZ3l7a2trjB8/Pt7//vf3y9qKougTLsDAJxBgkDj22GPjve99byxdurS8benSpXH++efHxIkTY+XKlX22t7S0xI9+9KM4/fTTo76+PsaOHRuf/vSny3/W9oUXXoiWlpaIiDjssMOiVCrFFVdcERERvb29MW/evJg4cWLU1dXFKaecEj/72c/6HL9UKsWSJUvitNNOi5qamli+fPn+HwKwzwgEGERaWlqitbW1/HNra2ucffbZ0dzcXN6+bdu2WLVqVbS0tER3d3fMnTs3nnzyybj33nvjhRdeKEdAU1NT/PznP4+IiGeeeSY2btwYd9xxR0REzJs3L374wx/GwoUL4+mnn47Zs2fHpZdeGsuWLeuznhtvvDHmz58f69ati5NPPrkfJgDsK1WVXgCw77S0tMR1110XPT09sW3btlizZk00NzdHd3d3LFy4MCIiVqxYEV1dXdHS0hLjx48vX/eoo46Kb33rWzF58uTo6OiI4cOHx+GHHx4REaNHj46RI0dGRERXV1d89atfjd/+9rcxZcqU8nWXL18e3/3ud6O5ubl8zFtvvTU+9rGP9dO9B/YlgQCDyNlnnx1bt26Nxx57LLZs2RLHHHNMjBo1Kpqbm+PKK6+Mzs7OWLp0aRx11FExfvz4WL16ddxyyy3x5JNPxpYtW6K3tzciItavXx+TJk3a6W0899xz8eabb6Yn/u3bt8epp57aZ9vpp5++f+4osN8JBBhEjj766Bg3bly0trbGli1byv+ab2xsjKampnj00UejtbU1PvrRj8bWrVtj2rRpMW3atPjJT34So0aNivXr18e0adNi+/btu7yNjo6OiIi4//7748gjj+xzWU1NTZ+fDz300H18D4H+IhBgkGlpaYmlS5fGli1bYs6cOeXtZ511VixZsiT+8Ic/xDXXXBN/+ctf4tVXX4358+dHU1NTRESfT0BERFRXV0dExFtvvVXeNmnSpKipqYn169f3eTkBGFwEAgwyLS0tMXPmzOju7u7zBN7c3ByzZs2K7du3R0tLS1RVVUV1dXUsWLAgrr766li7dm3MnTu3z7EmTJgQpVIp7rvvvvj4xz8edXV1UV9fH5///Odj9uzZ0dvbG2eeeWa88cYb8fvf/z4aGhri8ssv7++7DOwHPsUAg0xLS0ts27Ytjj766BgzZkx5e3Nzc7S3t5c/Djlq1Ki4++6745577olJkybF/Pnz47bbbutzrCOPPDK+8pWvxI033hhjxoyJWbNmRUTE3Llz4+abb4558+bF8ccfH9OnT4/7778/Jk6c2K/3Fdh/SkVRFJVeBAAwsDiDAAAkAgEASAQCAJAIBAAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJD8L99vt3dsVkIRAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Water\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1f3512e0-8d89-42e9-83c0-4df5d1151486",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Superplasticizer'>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Superplasticizer\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "193a2ec6-7c76-4020-b5f6-6204f2499298",
   "metadata": {},
   "outputs": [],
   "source": [
    "upper_limit=df1[\"Superplasticizer\"].quantile(0.99)\n",
    "df1[\"Superplasticizer\"]=np.where(df1[\"Superplasticizer\"]>upper_limit,upper_limit,df1[\"Superplasticizer\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "56f0d54a-bb6d-427a-9c3a-652d79eadeac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Superplasticizer'>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Superplasticizer\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8f9605dc-af37-4de8-9986-daaef02c9fb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Coarse Aggregate'>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Coarse Aggregate\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d777fc02-b61d-4f12-a322-554ad402903a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Age'>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Age\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "875a0815-349c-4e29-a6f7-7901b45e0676",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x17b53138dc0>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(x=df1[\"Age\"],kind=\"kde\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "0bde9f42-6ab9-498e-9f9e-2533adfdb1db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100.0"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "upper_limit=df1[\"Age\"].quantile(0.93)\n",
    "upper_limit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "645539f2-a309-4edf-9618-822461312d3b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1[\"Age\"]=np.where(df1[\"Age\"]>upper_limit,upper_limit,df1[\"Age\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "39e5645a-6acb-49c4-9a3f-3b573e4fc374",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Age'>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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ACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQNVQ+wo6ampliwYEH9fQAYbPaU+8I9KhBqtVo0NzdXPQYAVGZPuS/0FAMAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAABJQ9UD7Clq3duiVD3EYLL9ldd/n0Gh1r2t6hGANyAQ/mPEqtuqHmHQGrl6ftUjAPAanmIAAJJB/QhCU1NTLFiwoOoxBqVSSmzdujUiIhobG6NWq1U8EVVpamqqegTgdQzqQKjVatHc3Fz1GIPW8OHDqx4BgJ3wFAMAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkAgEACARCABAIhAAgEQgAACJQAAAEoEAACQCAQBIBAIAkDT09hNLKRER0dHR0WfDAAC716v326/ej+9MrwOhs7MzIiLa2tp6exUAQEU6OzujpaVlp8dr5Y0SYie6u7vj2WefjZEjR0atVuv1gB0dHdHW1hbr16+PUaNG9fp6eGN23X/suv/Ydf+x6/6zO3ddSonOzs4YN25cDBmy81ca9PoRhCFDhsSBBx7Y209PRo0a5f9w/cSu+49d9x+77j923X92167/2yMHr/IiRQAgEQgAQFJ5IDQ2NsZXvvKVaGxsrHqUAc+u+49d9x+77j923X/2hF33+kWKAMDAVfkjCADAnkcgAACJQAAAEoEAACSVBsL3vve9OPjgg6OpqSmOO+64WLZsWZXjDAhz586NY445JkaOHBn7779/nH766bF27doe53R1dcWsWbNi9OjRMWLEiDjzzDPj+eefr2jigeO6666LWq0Wl1xySf0yu+47zzzzTJx99tkxevToaG5ujiOOOCJWrFhRP15KiWuvvTYOOOCAaG5ujilTpsSTTz5Z4cR7p+3bt8c111wT48ePj+bm5njHO94RX/3qV3v83n677r3f/va38aEPfSjGjRsXtVot7rnnnh7Hd2W3mzZtihkzZsSoUaOitbU1zj333NiyZUvfD1sqMn/+/DJs2LBy0003lT/+8Y/ls5/9bGltbS3PP/98VSMNCKeeemq5+eaby+OPP15WrVpVPvjBD5b29vayZcuW+jkXXHBBaWtrKwsXLiwrVqwoxx9/fDnhhBMqnHrvt2zZsnLwwQeXI488ssyePbt+uV33jU2bNpWDDjqofPrTny5Lly4tTz31VPn1r39d/vKXv9TPue6660pLS0u55557yurVq8uHP/zhMn78+PLSSy9VOPneZ86cOWX06NHlvvvuK+vWrSt33nlnGTFiRPnWt75VP8eue+/+++8vV199dbnrrrtKRJS77767x/Fd2e1pp51W3vOe95SHH364/O53vyuHHHJImT59ep/PWlkgHHvssWXWrFn1j7dv317GjRtX5s6dW9VIA9LGjRtLRJSHHnqolFLK5s2byz777FPuvPPO+jl/+tOfSkSUJUuWVDXmXq2zs7Mceuih5YEHHignn3xyPRDsuu9cccUV5b3vfe9Oj3d3d5exY8eW66+/vn7Z5s2bS2NjY7ntttv6Y8QBY9q0aeWcc87pcdlHP/rRMmPGjFKKXfel1wbCrux2zZo1JSLK8uXL6+csWLCg1Gq18swzz/TpfJU8xfDyyy/HypUrY8qUKfXLhgwZElOmTIklS5ZUMdKA9e9//zsiIvbdd9+IiFi5cmW88sorPXY/YcKEaG9vt/temjVrVkybNq3HTiPsui/de++9MWnSpPj4xz8e+++/f0ycODF+9KMf1Y+vW7cuNmzY0GPXLS0tcdxxx9n1m3TCCSfEwoUL44knnoiIiNWrV8fixYtj6tSpEWHXu9Ou7HbJkiXR2toakyZNqp8zZcqUGDJkSCxdurRP5+n1H2v6//jHP/4R27dvjzFjxvS4fMyYMfHnP/+5ipEGpO7u7rjkkkvixBNPjMMPPzwiIjZs2BDDhg2L1tbWHueOGTMmNmzYUMGUe7f58+fHH/7wh1i+fHk6Ztd956mnnoobbrghLrvssvjSl74Uy5cvj4svvjiGDRsWM2fOrO/z9f5Nses358orr4yOjo6YMGFCDB06NLZv3x5z5syJGTNmRETY9W60K7vdsGFD7L///j2ONzQ0xL777tvn+68kEOgfs2bNiscffzwWL15c9SgD0vr162P27NnxwAMPRFNTU9XjDGjd3d0xadKk+PrXvx4RERMnTozHH388brzxxpg5c2bF0w0sd9xxR9x6663xs5/9LN797nfHqlWr4pJLLolx48bZ9SBTyVMM++23XwwdOjS9mvv555+PsWPHVjHSgHPRRRfFfffdFw8++GCPP8s9duzYePnll2Pz5s09zrf7N2/lypWxcePGOOqoo6KhoSEaGhrioYceim9/+9vR0NAQY8aMses+csABB8S73vWuHpe9853vjKeffjoior5P/6b8/33hC1+IK6+8Mj75yU/GEUccEZ/61Kfi0ksvjblz50aEXe9Ou7LbsWPHxsaNG3sc37ZtW2zatKnP919JIAwbNiyOPvroWLhwYf2y7u7uWLhwYUyePLmKkQaMUkpcdNFFcffdd8eiRYti/PjxPY4fffTRsc8++/TY/dq1a+Ppp5+2+zfplFNOicceeyxWrVpVf5s0aVLMmDGj/r5d940TTzwx/bjuE088EQcddFBERIwfPz7Gjh3bY9cdHR2xdOlSu36TXnzxxRgypOddw9ChQ6O7uzsi7Hp32pXdTp48OTZv3hwrV66sn7No0aLo7u6O4447rm8H6tOXPL4J8+fPL42NjeWWW24pa9asKZ/73OdKa2tr2bBhQ1UjDQgXXnhhaWlpKb/5zW/Kc889V3978cUX6+dccMEFpb29vSxatKisWLGiTJ48uUyePLnCqQeOHX+KoRS77ivLli0rDQ0NZc6cOeXJJ58st956axk+fHj56U9/Wj/nuuuuK62treUXv/hFefTRR8tHPvIRP3rXCzNnzixve9vb6j/meNddd5X99tuvfPGLX6yfY9e919nZWR555JHyyCOPlIgo3/zmN8sjjzxS/va3v5VSdm23p512Wpk4cWJZunRpWbx4cTn00EMH1o85llLKd77zndLe3l6GDRtWjj322PLwww9XOc6AEBGv+3bzzTfXz3nppZfK5z//+fLWt761DB8+vJxxxhnlueeeq27oAeS1gWDXfeeXv/xlOfzww0tjY2OZMGFC+eEPf9jjeHd3d7nmmmvKmDFjSmNjYznllFPK2rVrK5p279XR0VFmz55d2tvbS1NTU3n7299err766rJ169b6OXbdew8++ODr/hs9c+bMUsqu7faf//xnmT59ehkxYkQZNWpU+cxnPlM6Ozv7fFZ/7hkASPwtBgAgEQgAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAgEQgwyCxZsiSGDh0a06ZNq3oUYA/mVy3DIHPeeefFiBEjYt68ebF27doYN25c1SMBeyCPIMAgsmXLlrj99tvjwgsvjGnTpsUtt9zS4/i9994bhx56aDQ1NcX73//++PGPfxy1Wi02b95cP2fx4sVx0kknRXNzc7S1tcXFF18cL7zwQv9+IcBuJxBgELnjjjtiwoQJcdhhh8XZZ58dN910U7z6IOK6deviYx/7WJx++umxevXqOP/88+Pqq6/u8fl//etf47TTToszzzwzHn300bj99ttj8eLFcdFFF1Xx5QC7kacYYBA58cQT4xOf+ETMnj07tm3bFgcccEDceeed8b73vS+uvPLK+NWvfhWPPfZY/fwvf/nLMWfOnPjXv/4Vra2tcd5558XQoUPjBz/4Qf2cxYsXx8knnxwvvPBCNDU1VfFlAbuBRxBgkFi7dm0sW7Yspk+fHhERDQ0NcdZZZ8W8efPqx4855pgen3Psscf2+Hj16tVxyy23xIgRI+pvp556anR3d8e6dev65wsB+kVD1QMA/WPevHmxbdu2Hi9KLKVEY2NjfPe7392l69iyZUucf/75cfHFF6dj7e3tfTYrUD2BAIPAtm3b4ic/+Ul84xvfiA984AM9jp1++ulx2223xWGHHRb3339/j2PLly/v8fFRRx0Va9asiUMOOWS3zwxUy2sQYBC455574qyzzoqNGzdGS0tLj2NXXHFFLFq0KO6444447LDD4tJLL41zzz03Vq1aFZdffnn8/e9/j82bN0dLS0s8+uijcfzxx8c555wT5513XrzlLW+JNWvWxAMPPLDLj0IAewevQYBBYN68eTFlypQUBxERZ555ZqxYsSI6Ozvj5z//edx1111x5JFHxg033FD/KYbGxsaIiDjyyCPjoYceiieeeCJOOumkmDhxYlx77bV+lwIMQB5BAHZqzpw5ceONN8b69eurHgXoZ16DANR9//vfj2OOOSZGjx4dv//97+P666/3Ow5gkBIIQN2TTz4ZX/va12LTpk3R3t4el19+eVx11VVVjwVUwFMMAEDiRYoAQCIQAIBEIAAAiUAAABKBAAAkAgEASAQCAJAIBAAg+V9Md4iBZIaC3wAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df1[\"Age\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "7ae87e34-ec13-414e-93e2-95c286ef6636",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x17b5315b460>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(x=df1[\"Age\"],kind=\"kde\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b31b9faf-67e4-493e-a6ae-a38546baac9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cement</th>\n",
       "      <th>Water</th>\n",
       "      <th>Superplasticizer</th>\n",
       "      <th>Coarse Aggregate</th>\n",
       "      <th>Fine Aggregate</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>540.0</td>\n",
       "      <td>162.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>676.0</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>540.0</td>\n",
       "      <td>162.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1055.0</td>\n",
       "      <td>676.0</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>332.5</td>\n",
       "      <td>228.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>932.0</td>\n",
       "      <td>594.0</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>332.5</td>\n",
       "      <td>228.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>932.0</td>\n",
       "      <td>594.0</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>198.6</td>\n",
       "      <td>192.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>978.4</td>\n",
       "      <td>825.5</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1025</th>\n",
       "      <td>276.4</td>\n",
       "      <td>179.6</td>\n",
       "      <td>8.9</td>\n",
       "      <td>870.1</td>\n",
       "      <td>768.3</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1026</th>\n",
       "      <td>322.2</td>\n",
       "      <td>196.0</td>\n",
       "      <td>10.4</td>\n",
       "      <td>817.9</td>\n",
       "      <td>813.4</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1027</th>\n",
       "      <td>148.5</td>\n",
       "      <td>192.7</td>\n",
       "      <td>6.1</td>\n",
       "      <td>892.4</td>\n",
       "      <td>780.0</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028</th>\n",
       "      <td>159.1</td>\n",
       "      <td>175.6</td>\n",
       "      <td>11.3</td>\n",
       "      <td>989.6</td>\n",
       "      <td>788.9</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1029</th>\n",
       "      <td>260.9</td>\n",
       "      <td>200.6</td>\n",
       "      <td>8.6</td>\n",
       "      <td>864.5</td>\n",
       "      <td>761.5</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1030 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Cement  Water  Superplasticizer  Coarse Aggregate  Fine Aggregate    Age\n",
       "0      540.0  162.0               2.5            1040.0           676.0   28.0\n",
       "1      540.0  162.0               2.5            1055.0           676.0   28.0\n",
       "2      332.5  228.0               0.0             932.0           594.0  100.0\n",
       "3      332.5  228.0               0.0             932.0           594.0  100.0\n",
       "4      198.6  192.0               0.0             978.4           825.5  100.0\n",
       "...      ...    ...               ...               ...             ...    ...\n",
       "1025   276.4  179.6               8.9             870.1           768.3   28.0\n",
       "1026   322.2  196.0              10.4             817.9           813.4   28.0\n",
       "1027   148.5  192.7               6.1             892.4           780.0   28.0\n",
       "1028   159.1  175.6              11.3             989.6           788.9   28.0\n",
       "1029   260.9  200.6               8.6             864.5           761.5   28.0\n",
       "\n",
       "[1030 rows x 6 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=df1.drop([\"Strength\",\"Blast Furnace Slag\",\"Fly Ash\"],axis=1)\n",
    "y=df1[\"Strength\"]\n",
    "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=10)\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "48919057-bfd1-4888-8173-c6dec46e043b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## linearRegression model\n",
    "lr=LinearRegression()\n",
    "lr.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e63067cb-0ebf-441a-8259-cacfe5890a63",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.7102062830180553\n",
      "Mean Absolute error 6.941443110210607\n",
      "Mean Squared error 80.85291971663014\n"
     ]
    }
   ],
   "source": [
    "y_predict_train=lr.predict(x_train)\n",
    "def model_eval(actual,predict):\n",
    "    R2_Score=r2_score(actual,predict)\n",
    "    print(\"R2 Score is\",R2_Score)\n",
    "    mae=mean_absolute_error(actual,predict)\n",
    "    print(\"Mean Absolute error\",mae)\n",
    "    mse=mean_squared_error(actual,predict)\n",
    "    print(\"Mean Squared error\",mse)\n",
    "model_eval(y_train,y_predict_train)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "ba92d198-5ac5-408d-872d-f69e1e58a0a0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.6183178202259589\n",
      "Mean Absolute error 6.785686472860667\n",
      "Mean Squared error 77.91217419570245\n"
     ]
    }
   ],
   "source": [
    "y_predict_test=lr.predict(x_test)\n",
    "model_eval(y_predict_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "9462c01d-1798-4637-9bfc-077e1cbf7679",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>StandardScaler()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "StandardScaler()"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler=StandardScaler()\n",
    "scaler.fit(x_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "c16c0bb4-bcc3-490a-a0c4-fa9b023b0354",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train_scale=scaler.transform(x_train)\n",
    "x_test_scale=scaler.transform(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8b52ad79-d1da-4283-9b32-9830f91b9ada",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsRegressor()"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## knn algorithm\n",
    "knn=KNeighborsRegressor()\n",
    "knn.fit(x_train_scale,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "ebcf4b7f-b04e-41c9-92be-bdcbfacfccd2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.8620449091492168\n",
      "Mean Absolute error 4.650565533980583\n",
      "Mean Squared error 38.489695364077676\n"
     ]
    }
   ],
   "source": [
    "y_predict_train=knn.predict(x_train_scale)\n",
    "model_eval(y_train,y_predict_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "f807f02b-3dac-4557-80ba-6fd5aa33440c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.7070301892849442\n",
      "Mean Absolute error 5.749854368932038\n",
      "Mean Squared error 60.75015827184466\n"
     ]
    }
   ],
   "source": [
    "y_predict_test=knn.predict(x_test_scale)\n",
    "model_eval(y_predict_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "55bd4a40-472b-4beb-a0ca-cc6ca0e54f3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'n_neighbors': 10, 'p': 1}"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## hyperparameter tunning\n",
    "hyp={\"n_neighbors\":np.arange(10,20),\n",
    "      \"p\":[1,2]}\n",
    "gscv=GridSearchCV(knn,hyp)\n",
    "gscv.fit(x_train_scale,y_train)\n",
    "gscv.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "f66aba3c-193c-4bd2-89f8-6d3ef6b3e80b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(estimator=KNeighborsRegressor(),\n",
       "                   param_distributions={&#x27;n_neighbors&#x27;: array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),\n",
       "                                        &#x27;p&#x27;: [1, 2]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(estimator=KNeighborsRegressor(),\n",
       "                   param_distributions={&#x27;n_neighbors&#x27;: array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),\n",
       "                                        &#x27;p&#x27;: [1, 2]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomizedSearchCV(estimator=KNeighborsRegressor(),\n",
       "                   param_distributions={'n_neighbors': array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),\n",
       "                                        'p': [1, 2]})"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hyp={\"n_neighbors\":np.arange(10,20),\n",
    "      \"p\":[1,2]}\n",
    "rscv=RandomizedSearchCV(knn,hyp)\n",
    "rscv.fit(x_train_scale,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "d4b80acc-d325-4b50-ab06-25da2bacc5e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'p': 1, 'n_neighbors': 10}"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rscv.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "87f0de6c-744e-4607-8670-8bd162abff6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsRegressor(n_neighbors=13, p=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor(n_neighbors=13, p=1)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsRegressor(n_neighbors=13, p=1)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn_hyp=KNeighborsRegressor(n_neighbors=13,p=1)\n",
    "knn_hyp.fit(x_train_scale,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "ffc60b00-2499-486d-8904-507a7fe80c7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.7874731295801984\n",
      "Mean Absolute error 5.822330097087379\n",
      "Mean Squared error 59.29534349686909\n"
     ]
    }
   ],
   "source": [
    "y_predict_train=knn_hyp.predict(x_train_scale)\n",
    "model_eval(y_train,y_predict_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "f3a36098-81e4-4603-848d-833d55b029dd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.5875485065710568\n",
      "Mean Absolute error 6.528136669156088\n",
      "Mean Squared error 71.80897906302063\n"
     ]
    }
   ],
   "source": [
    "y_predict_test=knn_hyp.predict(x_test_scale)\n",
    "model_eval(y_predict_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "5d4e6413-aa65-470d-919a-a46a58a83159",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor(random_state=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(random_state=10)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeRegressor(random_state=10)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## decision tree\n",
    "dt=DecisionTreeRegressor(random_state=10)\n",
    "dt.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "02fe0925-12a7-4a00-9431-498ecc1ffe6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.994703474623069\n",
      "Mean Absolute error 0.19831310679611647\n",
      "Mean Squared error 1.4777392192556629\n"
     ]
    }
   ],
   "source": [
    "y_predict_train=dt.predict(x_train)\n",
    "model_eval(y_train,y_predict_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f3effec7-c139-4e6d-b9fb-783f5b4624bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.8566269169119168\n",
      "Mean Absolute error 4.190833333333334\n",
      "Mean Squared error 41.72210915587919\n"
     ]
    }
   ],
   "source": [
    "y_predict_test=dt.predict(x_test)\n",
    "model_eval(y_predict_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "1ff1fad2-4629-46c3-ad6c-76f36e2603be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=5, estimator=DecisionTreeRegressor(random_state=10),\n",
       "                   param_distributions={&#x27;criterion&#x27;: [&#x27;squared_error&#x27;,\n",
       "                                                      &#x27;absolute_error&#x27;],\n",
       "                                        &#x27;max_depth&#x27;: array([5, 7, 9]),\n",
       "                                        &#x27;min_samples_leaf&#x27;: array([2, 3, 4]),\n",
       "                                        &#x27;min_samples_split&#x27;: array([2, 3, 4]),\n",
       "                                        &#x27;random_state&#x27;: array([5, 7, 9])})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(cv=5, estimator=DecisionTreeRegressor(random_state=10),\n",
       "                   param_distributions={&#x27;criterion&#x27;: [&#x27;squared_error&#x27;,\n",
       "                                                      &#x27;absolute_error&#x27;],\n",
       "                                        &#x27;max_depth&#x27;: array([5, 7, 9]),\n",
       "                                        &#x27;min_samples_leaf&#x27;: array([2, 3, 4]),\n",
       "                                        &#x27;min_samples_split&#x27;: array([2, 3, 4]),\n",
       "                                        &#x27;random_state&#x27;: array([5, 7, 9])})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(random_state=10)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(random_state=10)</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomizedSearchCV(cv=5, estimator=DecisionTreeRegressor(random_state=10),\n",
       "                   param_distributions={'criterion': ['squared_error',\n",
       "                                                      'absolute_error'],\n",
       "                                        'max_depth': array([5, 7, 9]),\n",
       "                                        'min_samples_leaf': array([2, 3, 4]),\n",
       "                                        'min_samples_split': array([2, 3, 4]),\n",
       "                                        'random_state': array([5, 7, 9])})"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## hyperparameter tunning\n",
    "hyp={\"criterion\":[\"squared_error\",\"absolute_error\"],\n",
    "      \"max_depth\":np.arange(5,10,2),\n",
    "      \"min_samples_split\":np.arange(2,5),\n",
    "       \"min_samples_leaf\":np.arange(2,5),\n",
    "        \"random_state\":np.arange(5,10,2)}\n",
    "rscv=RandomizedSearchCV(dt,hyp,cv=5)\n",
    "rscv.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "1ff71356-9b66-40f6-a8b8-bdcde8711271",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'random_state': 9,\n",
       " 'min_samples_split': 2,\n",
       " 'min_samples_leaf': 3,\n",
       " 'max_depth': 9,\n",
       " 'criterion': 'squared_error'}"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rscv.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "64900844-7d47-4205-8009-4ceba9de428a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-8 {color: black;background-color: white;}#sk-container-id-8 pre{padding: 0;}#sk-container-id-8 div.sk-toggleable {background-color: white;}#sk-container-id-8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-8 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-8 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-8 div.sk-item {position: relative;z-index: 1;}#sk-container-id-8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-8 div.sk-item::before, #sk-container-id-8 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-8 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-8 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-8 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-8 div.sk-label-container {text-align: center;}#sk-container-id-8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-8 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor(max_depth=9, min_samples_leaf=2, random_state=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" checked><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(max_depth=9, min_samples_leaf=2, random_state=5)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeRegressor(max_depth=9, min_samples_leaf=2, random_state=5)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt_hyp=DecisionTreeRegressor(random_state=5,min_samples_split=2,min_samples_leaf=2,max_depth=9,criterion=\"squared_error\")\n",
    "dt_hyp.fit(x_train,y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "8c1dc38a-22a7-4314-b0c6-4794aaff8815",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.9308970203591513\n",
      "Mean Absolute error 3.0369734219488254\n",
      "Mean Squared error 19.279844032745437\n"
     ]
    }
   ],
   "source": [
    "y_predict_train=dt_hyp.predict(x_train)\n",
    "model_eval(y_train,y_predict_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "1eb14fc6-c481-4142-a7dc-3918416c8bf9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.7802028693821379\n",
      "Mean Absolute error 5.386262950890991\n",
      "Mean Squared error 53.151729562851735\n"
     ]
    }
   ],
   "source": [
    "y_predict_test=dt_hyp.predict(x_test)\n",
    "model_eval(y_predict_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "c3ea5819-b648-418c-8154-23aea7a37fbc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-9 {color: black;background-color: white;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" checked><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=10)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(random_state=10)"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Random forest\n",
    "ran=RandomForestRegressor(random_state=10)\n",
    "ran.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "93052545-df9d-4868-8d77-24085289f8d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.9792504071494402\n",
      "Mean Absolute error 1.5477783941574186\n",
      "Mean Squared error 5.789170249690392\n"
     ]
    }
   ],
   "source": [
    "y_predict_train=ran.predict(x_train)\n",
    "model_eval(y_train,y_predict_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "02bc52e5-d677-414b-93ed-d40085ac401c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.8867804227736613\n",
      "Mean Absolute error 3.6146910953151443\n",
      "Mean Squared error 27.02876772864131\n"
     ]
    }
   ],
   "source": [
    "y_predict_test=ran.predict(x_test)\n",
    "model_eval(y_predict_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "60b7f177-016e-46e2-8a7d-714276ea4032",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-10 {color: black;background-color: white;}#sk-container-id-10 pre{padding: 0;}#sk-container-id-10 div.sk-toggleable {background-color: white;}#sk-container-id-10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-10 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-10 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-10 div.sk-item {position: relative;z-index: 1;}#sk-container-id-10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-10 div.sk-item::before, #sk-container-id-10 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-10 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-10 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-10 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-10 div.sk-label-container {text-align: center;}#sk-container-id-10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-10 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=5, estimator=RandomForestRegressor(random_state=10),\n",
       "                   param_distributions={&#x27;bootstrap&#x27;: [True, False],\n",
       "                                        &#x27;criterion&#x27;: [&#x27;squared_error&#x27;,\n",
       "                                                      &#x27;absolute_error&#x27;],\n",
       "                                        &#x27;max_depth&#x27;: array([ 5,  7,  9, 11, 13, 15, 17, 19]),\n",
       "                                        &#x27;max_features&#x27;: [&#x27;sqrt&#x27;, &#x27;log2&#x27;],\n",
       "                                        &#x27;min_samples_leaf&#x27;: array([2, 3, 4, 5, 6, 7, 8, 9]),\n",
       "                                        &#x27;min_samples_split&#x27;: array([2, 3, 4, 5, 6, 7, 8, 9]),\n",
       "                                        &#x27;n_estimators&#x27;: array([100, 120, 140, 160, 180, 200]),\n",
       "                                        &#x27;random_state&#x27;: array([ 5,  8, 11, 14, 17])})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(cv=5, estimator=RandomForestRegressor(random_state=10),\n",
       "                   param_distributions={&#x27;bootstrap&#x27;: [True, False],\n",
       "                                        &#x27;criterion&#x27;: [&#x27;squared_error&#x27;,\n",
       "                                                      &#x27;absolute_error&#x27;],\n",
       "                                        &#x27;max_depth&#x27;: array([ 5,  7,  9, 11, 13, 15, 17, 19]),\n",
       "                                        &#x27;max_features&#x27;: [&#x27;sqrt&#x27;, &#x27;log2&#x27;],\n",
       "                                        &#x27;min_samples_leaf&#x27;: array([2, 3, 4, 5, 6, 7, 8, 9]),\n",
       "                                        &#x27;min_samples_split&#x27;: array([2, 3, 4, 5, 6, 7, 8, 9]),\n",
       "                                        &#x27;n_estimators&#x27;: array([100, 120, 140, 160, 180, 200]),\n",
       "                                        &#x27;random_state&#x27;: array([ 5,  8, 11, 14, 17])})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=10)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=10)</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomizedSearchCV(cv=5, estimator=RandomForestRegressor(random_state=10),\n",
       "                   param_distributions={'bootstrap': [True, False],\n",
       "                                        'criterion': ['squared_error',\n",
       "                                                      'absolute_error'],\n",
       "                                        'max_depth': array([ 5,  7,  9, 11, 13, 15, 17, 19]),\n",
       "                                        'max_features': ['sqrt', 'log2'],\n",
       "                                        'min_samples_leaf': array([2, 3, 4, 5, 6, 7, 8, 9]),\n",
       "                                        'min_samples_split': array([2, 3, 4, 5, 6, 7, 8, 9]),\n",
       "                                        'n_estimators': array([100, 120, 140, 160, 180, 200]),\n",
       "                                        'random_state': array([ 5,  8, 11, 14, 17])})"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hyp={\"n_estimators\":np.arange(100,210,20),\n",
    "     \"criterion\":[\"squared_error\",\"absolute_error\"],\n",
    "      \"max_features\":[\"sqrt\",\"log2\"],\n",
    "       \"max_depth\":np.arange(5,20,2),\n",
    "      \"min_samples_split\":np.arange(2,10),\n",
    "       \"min_samples_leaf\":np.arange(2,10),\n",
    "        \"random_state\":np.arange(5,20,3),\n",
    "        \"bootstrap\":[True,False]}\n",
    "rscv=RandomizedSearchCV(ran,hyp,cv=5)\n",
    "rscv.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "f5f6f256-7e9a-4670-a32a-39a6e30f52fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'random_state': 8,\n",
       " 'n_estimators': 180,\n",
       " 'min_samples_split': 8,\n",
       " 'min_samples_leaf': 6,\n",
       " 'max_features': 'log2',\n",
       " 'max_depth': 17,\n",
       " 'criterion': 'squared_error',\n",
       " 'bootstrap': False}"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rscv.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "50a80ab7-5cba-456d-8929-bd78c17472c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-11 {color: black;background-color: white;}#sk-container-id-11 pre{padding: 0;}#sk-container-id-11 div.sk-toggleable {background-color: white;}#sk-container-id-11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-11 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-11 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-11 div.sk-item {position: relative;z-index: 1;}#sk-container-id-11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-11 div.sk-item::before, #sk-container-id-11 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-11 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-11 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-11 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-11 div.sk-label-container {text-align: center;}#sk-container-id-11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-11 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(bootstrap=False, max_depth=17, max_features=&#x27;log2&#x27;,\n",
       "                      min_samples_leaf=6, min_samples_split=8, n_estimators=180,\n",
       "                      random_state=8)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" checked><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(bootstrap=False, max_depth=17, max_features=&#x27;log2&#x27;,\n",
       "                      min_samples_leaf=6, min_samples_split=8, n_estimators=180,\n",
       "                      random_state=8)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(bootstrap=False, max_depth=17, max_features='log2',\n",
       "                      min_samples_leaf=6, min_samples_split=8, n_estimators=180,\n",
       "                      random_state=8)"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rscv.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "3c6cd332-d73d-4943-9f79-81346e7be7ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-12 {color: black;background-color: white;}#sk-container-id-12 pre{padding: 0;}#sk-container-id-12 div.sk-toggleable {background-color: white;}#sk-container-id-12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-12 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-12 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-12 div.sk-item {position: relative;z-index: 1;}#sk-container-id-12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-12 div.sk-item::before, #sk-container-id-12 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-12 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-12 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-12 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-12 div.sk-label-container {text-align: center;}#sk-container-id-12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-12 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(bootstrap=False, max_depth=13, max_features=&#x27;log2&#x27;,\n",
       "                      min_samples_leaf=2, min_samples_split=4, n_estimators=200,\n",
       "                      random_state=14)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" checked><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(bootstrap=False, max_depth=13, max_features=&#x27;log2&#x27;,\n",
       "                      min_samples_leaf=2, min_samples_split=4, n_estimators=200,\n",
       "                      random_state=14)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(bootstrap=False, max_depth=13, max_features='log2',\n",
       "                      min_samples_leaf=2, min_samples_split=4, n_estimators=200,\n",
       "                      random_state=14)"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ran_hyp=RandomForestRegressor(bootstrap=False, max_depth=13, max_features='log2',\n",
    "                      min_samples_leaf=2, min_samples_split=4, n_estimators=200,\n",
    "                      random_state=14)\n",
    "ran_hyp.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "c466dab9-2300-4619-bff5-6f1d99da4cdc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.9818848286789963\n",
      "Mean Absolute error 1.460613249757118\n",
      "Mean Squared error 5.0541623459744205\n"
     ]
    }
   ],
   "source": [
    "y_predict_train=ran_hyp.predict(x_train)\n",
    "model_eval(y_train,y_predict_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "353770c7-9f84-4493-8ce1-a10c3a15c468",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 Score is 0.8867417554674348\n",
      "Mean Absolute error 3.4491138840622373\n",
      "Mean Squared error 25.05074987387998\n"
     ]
    }
   ],
   "source": [
    "y_predict_test=ran_hyp.predict(x_test)\n",
    "model_eval(y_predict_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "2836111b-e59e-4a6f-a6ff-b1b306c680d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "a4278b54-3a43-421d-8895-b04e11c9953f",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(\"model.pkl\",\"wb\")as file:\n",
    "    pickle.dump(ran_hyp,file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "17bd81ed-f92a-4ecb-86b4-7f01f8cf955f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "weight",
   "language": "python",
   "name": "weight"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
